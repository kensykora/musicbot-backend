version: 0.1.0.{build}
environment:
  VERSION: 0.1.0
  AZ_AD_SP_ID: http://musicbotsvc
  AZ_AD_TENANT: 46947e84-c7c5-4572-bf44-0c0b2d9013b8
  AZ_AD_SP_PASS:
    secure: QBSDpMZyT8QNWCo1R8M6o7+Umvo61xZjMnRIAp2a/eM=
  AZ_LOCATION: eastus
  AZ_ARM_STORAGE_ACCOUNT_NAME: stageda864e5f18ab4628ac6
  AZ_RG_INT_PREFIX: MUSIC-BOT-INT-
  MOCHA_SLOW_THRESHOLD_MS: 1000
  MOCHA_TIMEOUT_THRESHOLD_MS: 10000
  GIT_ACCESS_TOKEN:
    secure: /8nuu389OsrB4Ylkb0aM6AsXqVTYfhqMibLEH8SZDNAEOIMPe2SiR8Im/jFX6rQ2

for:

- branches:
    only:
      - master
  environment:
    AZ_RG: MUSIC-BOT-DEV
    BRANCH_NAME: dev

- branches:
    only:
      - prod
  environment:
    AZ_RG: MUSIC-BOT-PROD
    BRANCH_NAME: prod


image: Visual Studio 2017 Preview
assembly_info:
  patch: true
  assembly_version: $(VERSION).$(APPVEYOR_BUILD_NUMBER)
  assembly_file_version: $(VERSION).$(APPVEYOR_BUILD_NUMBER)
  assembly_informational_version: $(VERSION).$(APPVEYOR_BUILD_NUMBER)
dotnet_csproj:
  patch: true
  version: $(VERSION).$(APPVEYOR_BUILD_NUMBER)
  package_version: $(VERSION)
branches:
  only:
    - master
    - prod
notifications:
  - provider: Slack
    incoming_webhook:
      secure: MdVvSoK8ot0oaTh3xGuB2aPFuI64lu++kQAg0VYxdhsInJUIxOtZGwQng2wJLBMpNCl1NDnx+cooq8D945ICEe+/OsvKybd1rSWR6zPxqZA=
    on_build_failure: true
    on_build_status_changed: true
    on_build_success: false
artifacts:
  - path: install.log
    name: Cosmos DB Install Log
install:
  - npm install -g mocha
  - npm install -g mocha-multi-reporters
  - npm install -g mocha-appveyor-reporter
  - npm install -g azure-functions-core-tools
  - npm install
  - ps: Invoke-WebRequest -Uri 'https://aka.ms/cosmosdb-emulator' -OutFile 'cosmos-db.msi'
  - start /wait msiexec /i cosmos-db.msi /qn /quiet /norestart /log install.log
build_script: 
  # Restore and build
  - nuget restore
  - msbuild MusicBot.Backend.sln /p:Configuration=Release /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll" /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="functions-app.zip" /p:DeployIisAppPath="Default Web Site"

  # Integration Test locally
  - ps: $cosmosJob = Start-Job -FilePath .\test\func\Start-CosmosDb.ps1
  - ps: $funcDir = $(pwd).Path + '\src\func\bin\Release\Net47'
  - ps: $funcJob = Start-Job -FilePath .\test\func\Start-FuncHost.ps1 -ArgumentList $funcDir
  - ps: Start-Sleep -s 15 # give it some startup time
  - ps: Invoke-WebRequest -URI http://localhost:7071/api/version -TimeoutSec 60 # Prime it
  - SET TEST_TYPE=local
  - >
      mocha --slow %MOCHA_SLOW_THRESHOLD_MS% 
      --timeout %MOCHA_TIMEOUT_THRESHOLD_MS%
      --reporter mocha-multi-reporters
      --reporter-options configFile=test/func/build-mocha-reporter-config.json
      test/func

  - ps: Stop-Job $funcJob 

  # If this is a PR, we're done
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -ne $null) { Exit-AppVeyorBuild }

  # Prep for Azure integration test - push branch to github
  - git config --global credential.helper store
  - ps: Add-Content "$env:USERPROFILE\.git-credentials" "https://$($env:GIT_ACCESS_TOKEN):x-oauth-basic@github.com`n"
  - git checkout -b %AZ_RG_INT_PREFIX%%APPVEYOR_BUILD_NUMBER%
  - git push -u origin %AZ_RG_INT_PREFIX%%APPVEYOR_BUILD_NUMBER%
  - set PushedBranch=true

  # Deploy resources to Azure for integration testing
  - ps: $pass = ConvertTo-SecureString $env:AZ_AD_SP_PASS -AsPlainText -Force
  - ps: $cred = New-Object -TypeName pscredential -ArgumentList $env:AZ_AD_SP_ID, $pass
  - ps: Login-AzureRmAccount -Credential $cred -ServicePrincipal -TenantId $env:AZ_AD_TENANT
  - ps: $DeployedIntegrationEnvironment = $true
  - ps: |
      ./src/arm/Deploy-AzureResourceGroup.ps1 `
        -ResourceGroupName "$env:AZ_RG_INT_PREFIX$env:APPVEYOR_BUILD_NUMBER" `
        -ResourceGroupLocation $env:AZ_LOCATION `
        -OtherParams @{ `
          resourcePrefix = "$env:AZ_RG_INT_PREFIX$env:APPVEYOR_BUILD_NUMBER"; `
          branch = "$env:AZ_RG_INT_PREFIX$env:APPVEYOR_BUILD_NUMBER"; `
          includeSourceControlDeployment = "yes"; `
        } `
        -UploadArtifacts `
        -StorageAccountName $env:AZ_ARM_STORAGE_ACCOUNT_NAME
  - ps: if (-not $env:LastAzureDeploySuccessful) { throw "Azure Script did not complete successfully" }

  # Test on Azure
  - ps: Invoke-WebRequest -URI https://$env:AZ_RG_INT_PREFIX$env:APPVEYOR_BUILD_NUMBER-APP.azurewebsites.net/api -TimeoutSec 60 # Prime it
  - set BASE_URL=https://%AZ_RG_INT_PREFIX%%APPVEYOR_BUILD_NUMBER%-APP.azurewebsites.net/api
  - SET TEST_TYPE=integration
  - >
      mocha --slow %MOCHA_SLOW_THRESHOLD_MS% 
      --timeout %MOCHA_TIMEOUT_THRESHOLD_MS% 
      --reporter mocha-multi-reporters 
      --reporter-options configFile=test/func/build-mocha-reporter-config.json
      test/func
deploy_script:
  # Merge master into dev
  - if "%BRANCH_NAME%"=="dev" git checkout .
  - if "%BRANCH_NAME%"=="dev" git checkout dev
  - if "%BRANCH_NAME%"=="dev" git merge master
  - if "%BRANCH_NAME%"=="dev" git push origin dev
  # Deploy to Azure
  - ps: |
      ./src/arm/Deploy-AzureResourceGroup.ps1 `
        -ResourceGroupName $env:AZ_RG `
        -ResourceGroupLocation $env:AZ_LOCATION `
        -OtherParams @{ `
          resourcePrefix = $env:AZ_RG; `
          branch = $env:BRANCH_NAME; `
          includeSourceControlDeployment = 'no'; `
        } `
        -UploadArtifacts `
        -StorageAccountName $env:AZ_ARM_STORAGE_ACCOUNT_NAME;
  - ps: if (-not $env:LastAzureDeploySuccessful) { throw 'Deployment Failed' }
  - ps: |
      ./src/arm/Update-VersionSetting.ps1 `
        -ResourceGroupName $env:AZ_RG `
        -AppServiceName $env:AZ_RG-APP `
        -VersionNumber '$env:VERSION.$env:APPVEYOR_BUILD_NUMBER';
  
on_finish:
  # Stop the functions job if it's running
  - ps: if ($funcJob -ne $null -and $funcJob.State -ne 'Stopped') { Stop-Job $funcJob }

  # Tear down Azure Integration environment
  - ps: if ($DeployedIntegrationEnvironment) { Remove-AzureRmResourceGroup -Name $env:AZ_RG_INT_PREFIX$env:APPVEYOR_BUILD_NUMBER -Force }

  # Tear down pushed branch
  - if "%PushedBranch%" == "true" (git push origin --delete %AZ_RG_INT_PREFIX%%APPVEYOR_BUILD_NUMBER%)