{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourcePrefix": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Prefix for the resource"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated"
      }
    },
    "repoURL": {
      "type": "string",
      "defaultValue": "https://github.com/kensykora/musicbot-backend.git",
      "metadata": {
        "description": "The URL for the GitHub repository that contains the project to deploy."
      }
    },
    "branch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "The branch of the GitHub repository to use."
      }
    },
    "includeSourceControlDeployment": {
      "type": "string",
      "allowedValues": [
        "yes", "no"
      ],
      "defaultValue": "yes",
      "metadata": {
        "description": "Yes to include function app from github as deployment. Provide repoURL and branch parameter."
      }
    },
    "iotHubResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource name of the IoT hub to use"
      }
    },
    "betaKey": {
      "type": "securestring",
      "metadata" : {
        "description": "Beta key for validating registration calls for the time being"
      }
    },
    "slackVerificationToken": {
      "type": "securestring",
      "metadata": {
        "description": "Slack verification token for authenticating slack calls"
      }
    }
  },
  "variables": {
    "deploymentSourceLink": "[concat(parameters('_artifactsLocation'),'/_app-sourcecontrols-', parameters('includeSourceControlDeployment'), '.json', parameters('_artifactsLocationSasToken'))]",
    "appServiceName": "[concat(parameters('resourcePrefix'), '-APP')]",
    "storageName": "[replace(toLower(concat(parameters('resourcePrefix'), '-STG')),'-','')]",
    "insightsName": "[concat(parameters('resourcePrefix'), '-INS')]",
    "databaseName": "[toLower(concat(parameters('resourcePrefix'),'-DB'))]",
    "iotHubName":       "[if(empty(parameters('iotHubResourceId')), concat(parameters('resourcePrefix'),'-IOT'),                      substring(parameters('iotHubResourceId'), add(lastIndexOf(parameters('iotHubResourceId'), '/'), 1)))]",
    "iotHubResourceId": "[if(empty(parameters('iotHubResourceId')), resourceId('Microsoft.Devices/IotHubs', variables('iotHubName')), parameters('iotHubResourceId'))]"
  },
  "resources": [{
      "apiVersion": "2016-07-01",
      "name": "[concat('deployGithub-', parameters('includeSourceControlDeployment'))]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "[variables('deploymentSourceLink')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "siteName": {
            "value": "[variables('appServiceName')]"
          },
          "repoUrl": {
            "value": "[parameters('repoUrl')]"
          },
          "branch": {
            "value": "[parameters('branch')]"
          }
        }
      },
      "dependsOn": [
        "[variables('appServiceName')]"
      ]
    },
    {
      "name": "[variables('databaseName')]",
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2015-04-08",
      "location": "[resourceGroup().location]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "locations": [{
            "locationName": "eastus",
            "failoverPriority": "0"
          },
          {
            "locationName": "westus",
            "failoverPriority": "1"
          }
        ],
        "databaseAccountOfferType": "Standard",
        "enableAutomaticFailover": true
      }
    },
    {
      "name": "[variables('iotHubName')]",
      "type": "Microsoft.Devices/IotHubs",
      "apiVersion": "2017-01-19",
      "location": "[resourceGroup().location]",
      "condition": "[empty(parameters('iotHubResourceId'))]",
      "properties": {
        "eventHubEndpoints": {
          "events": {
            "retentionTimeInDays": 1,
            "partitionCount": 2
          }
        },
        "cloudToDevice": {
          "defaultTtlAsIso8601": "PT1M",
          "maxDeliveryCount": 10,
          "feedback": {
            "maxDeliveryCount": 10,
            "ttlAsIso8601": "PT1M",
            "lockDurationAsIso8601": "PT60S"
          }
        }
      },
      "sku": {
        "name": "F1",
        "capacity": 1
      }
    },
    {
      "name": "[variables('appServiceName')]",
      "type": "Microsoft.Web/sites",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
        "[resourceId('microsoft.insights/components/', variables('insightsName'))]",
        "[variables('databaseName')]",
        "[variables('iotHubName')]"
      ],
      "properties": {
        "siteConfig": {
          "appSettings": [{
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2015-05-01-preview').key1)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~1"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[concat(toLower(variables('appServiceName')), '9de6')]"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "6.5.0"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', variables('insightsName')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "DocumentDbKey",
              "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('databaseName')), '2015-04-08').primaryMasterKey]"
            },
            {
              "name": "DocumentDbServer",
              "value": "[reference(variables('databaseName')).documentEndpoint]"
            },
            {
              "name": "DocumentDbDatabaseId",
              "value": "[variables('databaseName')]"
            },
            {
              "name": "IoTHubConnectionString",
              "value": "[concat('HostName=', variables('iotHubName'),'.azure-devices.net;SharedAccessKeyName=iothubowner;SharedAccessKey=', listkeys(concat(variables('iotHubResourceId'),'/iothubkeys/iothubowner'), '2017-01-19').primaryKey)]"
            },
            {
              "name": "BetaKey",
              "value": "[parameters('betaKey')]"
            },
            {
              "name": "SlackVerificationToken",
              "value": "[parameters('slackVerificationToken')]"
            }
          ]
        },
        "name": "[variables('appServiceName')]",
        "clientAffinityEnabled": false
      },
      "apiVersion": "2016-03-01",
      "location": "[resourceGroup().location]",
      "kind": "functionapp"
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "apiVersion": "2015-05-01",
      "name": "[variables('insightsName')]",
      "type": "microsoft.insights/components",
      "location": "[resourceGroup().location]",
      "properties": {
        "ApplicationId": "[variables('appServiceName')]"
      }
    }
  ],
  "outputs": {}
}